name: tfsec
on:
  pull_request:

jobs:
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform security scan
        if: github.event_name == 'pull_request'
        uses: triat/terraform-security-scan@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          soft_fail: true
          tfsec_actions_comment: true
          tfsec_actions_working_dir: ./
        continue-on-error: true

#      - name: tfsec
#        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
#        with:
#          tfsec_args: --soft-fail
#          working_directory: ./
#          tfsec_formats: sarif
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}

#      - name: 'Post comment to Pull Request'
#          uses: actions/github-script@0.9.0
#          if: github.event_name == 'pull_request'
#          env:
#            PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#          with:
#            github-token: ${{ secrets.TOKEN }}
#            script: |
#              const output = `#### Terraform Format and Style for "Prod" üñå\`${{ steps.fmt.outcome }}\`
#              #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
#              <details><summary>Show Plan</summary>
#              \`\`\`\n
#              ${process.env.PLAN}
#              \`\`\`
#              </details>
#              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
#              github.issues.createComment({
#                issue_number: context.issue.number,
#                owner: context.repo.owner,
#                repo: context.repo.repo,
#                body: output
#              })